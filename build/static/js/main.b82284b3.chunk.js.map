{"version":3,"sources":["Landing/index.jsx","Crossword/constants.js","Design/EditableClue.jsx","Crossword/utils.js","Crossword/handleInput.js","Crossword/index.jsx","Design/EditablePageHeader.jsx","Design/HowTo.jsx","Crossword/initBoard.js","SaveGame/index.js","LoadGame/index.js","Design/EditableGameCompleteMessage.jsx","Play/endGame.js","Play/utils.js","Design/index.jsx","Design/publishGame.js","Play/PageHeader.jsx","Play/Clue.jsx","Play/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["pickerOpts","types","description","accept","excludeAcceptAllOption","multiple","Landing","setPlayGame","setDesignGame","classesParent","title","classes","style","display","justifyContent","marginTop","Button","backgroundColor","marginRight","variant","onClick","ALPHABET","ALPHABET_LOWER","map","letter","toLocaleLowerCase","HORIZONTAL","VERTICAL","DIRECTIONS","TAB","ENTER","HORIZONTAL_ARROW_KEYS","VERTICAL_ARROW_KEYS","ALL_DIRECTIONAL_KEYS","ARROW_KEY_MAPPINGS","ArrowLeft","tile","amount","TILE_LEFT","ArrowRight","TILE_RIGHT","ArrowUp","TILE_ABOVE","ArrowDown","TILE_BELOW","x","y","DELETE_KEY","BACKSPACE_KEY","CLEAR_LETTER_KEYS","CLUE_COLUMN_TITLE","EDIT_LINK","EditableClue","clue","handleClueClick","selected","secondary","linked","innerRef","registerActiveItem","activeItem","endClueEdit","endClueLink","activateTile","useState","clueText","setClueText","lastBlurTime","useRef","Date","now","editText","id","editLink","editMode","linkMode","prep","useKeypress","handleBlur","useEffect","current","opacity","cursor","outline","padding","className","includes","ref","tabIndex","fontWeight","textAlign","minWidth","width","clueNumber","marginLeft","autoFocus","type","value","event","stopPropagation","onChange","target","onBlur","Tooltip","getOppositeDirection","direction","difference","Error","prepTileConfig","DIRECTION","NEXT_TILE","PREV_TILE","indexFromClueId","clueId","replace","directionFromClueId","arrowKeyPressInDirection","pressedDirection","key","game","arrowKeyMapping","selectedTile","console","log","nextTile","getClueIdFromTile","i","_isLocationOnBoard","isTile","tileDirection","Object","keys","board","clueNumberLink","moveSelectorOneSpaceInDirection","getClue","wordLength","endTile","keepSearching","reachedEnd","tileIndex","getTileBoardItem","guess","removeGuessFromTile","setTimestamp","useStyles","makeStyles","root","flexGrow","useCrosswordStyles","block","fill","stroke","pointerEvents","gameBoardBackground","zIndex","finishMessagePixel","gameWon","highlighted","linkHighlighted","selectedClue","secondaryClue","grid","text","background","nTiles","tileSize","lineLength","lineStart","Cell","onContextMenu","children","height","Tile","props","numberOfTiles","tileContent","circle","cx","cy","r","strokeWidth","fontSize","alignmentBaseline","letterSpacing","textAnchor","Block","Crossword","rightClick","preTileClick","postKeyPress","preventCrosswordTyping","crosswordClasses","preventKeyPress","customGlyphs","forEach","glyph","fonts","sevenPlus","glyphs","shiftKey","repeat","setTimeout","arrowKeyPress","previousKeyWasDelete","length","match","toUpperCase","letterKeyPres","clearLetterKey","indexModifier","clueIndex","clues","findIndex","item","tabKeyPress","maxWidth","gameBoardSize","maxHeight","xmlns","viewBox","margin","float","userSelect","preventDefault","onKeyDown","row","tileProps","handleTileClick","oppositeDirection","updateDirection","selectedClueId","blank","intersection","linkClues","values","placeTile","d","vectorEffect","PageHeader","saveGameWithTitle","setEditMode","titleText","setTitleText","handleClickToEdit","Grid","xs","Box","my","test1","container","justify","spacing","Typography","component","borderGradient","theme","list","listStyle","verticalAlign","header","HowTo","color","ADD_TO_START","ADD_TO_END","modifyBoardLengthConfig","method","array","unshift","adjust","push","DELETE_START","shift","DELETE_END","pop","modifyBoardLength","modificationType","newRow","gameC","cloneDeep","isStartModification","newArrayLength","Array","answer","addBoardFunctions","isLocationOnBoard","isTileAtCoords","initDesignBoard","oldGame","modifyBoard","cell","gameFinishedMessage","NEW_BOARD_ADJUSTER","totalNumberOfBoardLetters","updateClueNumber","newClueNumber","prepareTile","prevTileCoords","isNextTile","prevTile","find","t","isTileOnNewBoard","isTileOnOldBoard","lookupClueOnNewBoard","concat","newClueId","newClueLinks","compact","oldLinkId","linkDirection","oldLink","newTile","nearestSelectedClueId","min","window","screen","getSecondaryClueIdFromTile","emptyDesignBoard","saveGame","data","a","jsonSave","JSON","stringify","showSaveFilePicker","newHandle","createWritable","writableStream","blob","Blob","write","close","loadFile","setGameData","showOpenFilePicker","fileHandle","getFile","fileData","jsonFile","parse","EditableGameCompleteMessage","message","saveGameWithFinishMessage","demoEndGameMessage","messageText","setMessage","activateEndGameMessage","setGameWon","boardWidth","tileBoardSnapshot","messageBoard","messageBoardSnapshots","startDelay","finishMessagePixels","renderPixels","pixelDisplayHeight","numberOfPixelRenders","yStart","Math","ceil","snapshotOfBoard","gameTimeEnd","focusClues","clueRefs","primaryClueId","secondaryClueId","focus","snackbar","transition","svg","invertTile","index","boardLength","Alert","elevation","Design","setGame","publishErrorMessage","setPublishErrorMessage","howTo","setHowTo","rotationalSymmetry","setRotationalSymmetry","crosswordRef","demoGame","setDemoGame","editId","unregisterActiveItem","pull","ModifyGameBoardLengthStart","flexDirection","ModifyGameBoardLengthEnd","alignItems","marginBottom","Backdrop","open","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","EditablePageHeader","v","issue","verifyPublish","publish","sm","oppositeTile","getRotatedTile","elem","overflowY","paddingLeft","Clue","Play","catch","incorrectGuess","alignContent","App","designGame","playGame","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b82284b3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {PageHeader} from \"../App\";\r\n\r\nexport const pickerOpts = {\r\n    types: [\r\n        {\r\n            description: 'Crossword Game (.json)',\r\n            accept: {\r\n                '-crossword/*': ['.json']\r\n            }\r\n        },\r\n    ],\r\n    excludeAcceptAllOption: true,\r\n    multiple: false\r\n};\r\n\r\nconst Landing = ({ setPlayGame, setDesignGame, classesParent, title }) => {\r\n    return (\r\n        <div>\r\n            <PageHeader title={title} classes={classesParent} />\r\n            <div style={{ display: 'flex', justifyContent: 'center', marginTop: '300px' }}>\r\n                <Button\r\n                    style={{ backgroundColor: '#85dcb0', marginRight: '50px' }}\r\n                    variant=\"contained\"\r\n                    onClick={() => setPlayGame(true)}\r\n                >Play</Button>\r\n                <Button\r\n                    style={{ backgroundColor: '#85dcb0' }}\r\n                    variant=\"contained\"\r\n                    onClick={() => setDesignGame(true)}\r\n                >Design</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;\r\n","// export const TILE_SIZE = 33;\r\nexport const ALPHABET =\r\n    ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\r\nexport const ALPHABET_LOWER = ALPHABET.map(letter => letter.toLocaleLowerCase())\r\nexport const HORIZONTAL = 'HORIZONTAL';\r\nexport const VERTICAL = 'VERTICAL';\r\nexport const DIRECTIONS = [HORIZONTAL, VERTICAL];\r\nexport const ARROW_LEFT = 'ArrowLeft';\r\nexport const ARROW_RIGHT = 'ArrowRight';\r\nexport const ARROW_UP = 'ArrowUp';\r\nexport const ARROW_DOWN = 'ArrowDown';\r\nexport const TAB = 'Tab';\r\nexport const ENTER = 'Enter';\r\nexport const DEFAULT_DIRECTION = HORIZONTAL;\r\nexport const HORIZONTAL_ARROW_KEYS = [ARROW_LEFT, ARROW_RIGHT];\r\nexport const VERTICAL_ARROW_KEYS = [ARROW_UP, ARROW_DOWN];\r\nexport const ALL_DIRECTIONAL_KEYS = [...VERTICAL_ARROW_KEYS, ...HORIZONTAL_ARROW_KEYS];\r\nexport const ARROW_KEY_MAPPINGS = {\r\n    ArrowLeft: (tile, amount= 1) => TILE_LEFT(tile, amount),\r\n    ArrowRight: (tile, amount = 1) => TILE_RIGHT(tile, amount),\r\n    ArrowUp: (tile, amount = 1) => TILE_ABOVE(tile, amount),\r\n    ArrowDown: (tile, amount = 1) => TILE_BELOW(tile, amount),\r\n};\r\nexport const TILE_LEFT = ({x, y}, amount= 1) => ({x: x - amount, y});\r\nexport const TILE_RIGHT = ({x, y}, amount = 1) => ({x: x + amount, y});\r\nexport const TILE_ABOVE = ({x, y}, amount = 1) => ({x, y: y - amount});\r\nexport const TILE_BELOW = ({x, y}, amount = 1) => ({x, y: y + amount});\r\nexport const DELETE_KEY = 'Delete';\r\nexport const SPACE_KEY = ' ';\r\nexport const BACKSPACE_KEY = 'Backspace';\r\nexport const CLEAR_LETTER_KEYS = [DELETE_KEY, SPACE_KEY, BACKSPACE_KEY];\r\nexport const CLUE_COLUMN_TITLE = { HORIZONTAL: 'Across', VERTICAL: 'Down' }","import React, {useState, useRef, useEffect} from \"react\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CompareArrowsRoundedIcon from '@material-ui/icons/CompareArrowsRounded';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport './Clue.css'\r\nimport useKeypress from \"react-use-keypress\";\r\nimport { ENTER } from \"../Crossword/constants\";\r\n\r\nexport const EDIT_TEXT = '-EDIT-TEXT';\r\nexport const EDIT_LINK = '-EDIT-LINK';\r\n\r\nconst prep = (clue, activeItem) => {\r\n    const editText = `${clue.id}${EDIT_TEXT}`;\r\n    const editLink = `${clue.id}${EDIT_LINK}`;\r\n    const editMode = activeItem === editText;\r\n    const linkMode = activeItem === editLink;\r\n    return { editText, editLink, editMode, linkMode };\r\n};\r\n\r\nconst EditableClue = ({\r\n    clue,\r\n    handleClueClick,\r\n    selected,\r\n    secondary,\r\n    linked,\r\n    innerRef,\r\n    registerActiveItem,\r\n    activeItem,\r\n    endClueEdit,\r\n    endClueLink,\r\n    activateTile\r\n}) => {\r\n    const [clueText, setClueText] = useState(clue.clue);\r\n    const lastBlurTime = useRef(Date.now());\r\n    const { editText, editLink, editMode, linkMode } = prep(clue, activeItem);\r\n\r\n    useKeypress(ENTER, () => {\r\n        if(editMode) {\r\n            handleBlur();\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        setClueText(clue.clue)\r\n    }, [clue.clue])\r\n\r\n    const handleChange = event => setClueText(event.target.value);\r\n\r\n    const handleBlur = () => {\r\n        endClueEdit(clue.id, clueText);\r\n        lastBlurTime.current = Date.now();\r\n    }\r\n\r\n    const handleClickToLink = event => {\r\n        event.stopPropagation();\r\n        if(!linkMode && lastBlurTime.current + 500 < Date.now()) {\r\n            activateTile(clue.tile);\r\n            registerActiveItem(editLink);\r\n        } else {\r\n            endClueLink();\r\n        }\r\n    }\r\n\r\n    const handleClickToEditText = () => {\r\n        if(!editMode && lastBlurTime.current + 500 < Date.now()) {\r\n            registerActiveItem(editText);\r\n        }\r\n    }\r\n\r\n    return <li\r\n    style={{\r\n        ...(selected ? { backgroundColor: '#85dcb0' } :\r\n            linked ? { backgroundColor: '#e8a87c', opacity: '60%' } : {}),\r\n        cursor: 'pointer',\r\n        outline: 'none',\r\n        display: 'flex',\r\n        padding: '5px 10px 5px 1px'\r\n    }}\r\n    className={`${secondary ? 'secondaryClueBorder' : 'clueBorder'} ${activeItem.includes(EDIT_LINK) && activeItem !== editLink ? 'highlightLinkOnHover' : ''}`}\r\n    key={clue.id}\r\n    id={clue.id}\r\n    selected={selected}\r\n    onClick={() => handleClueClick(clue)}\r\n    ref={innerRef}\r\n    tabIndex='-1'>\r\n        <span style={{ fontWeight: 'bold',\r\n            textAlign: 'right',\r\n            minWidth: '12px',\r\n            width: '12px'\r\n        }}>{clue.clueNumber}</span>\r\n        <span style={{\r\n            marginLeft: '10px'\r\n        }}>{ editMode ?\r\n            <input autoFocus type=\"text\" value={clueText} onClick={event => event.stopPropagation()} onChange={handleChange} onBlur={handleBlur} /> :\r\n            clue.clue }\r\n        </span>\r\n        <EditIcon\r\n            className={editMode ? 'editIconSelected' : 'editIcon'}\r\n            onClick={handleClickToEditText} />\r\n        {(!activeItem.includes(EDIT_LINK) || activeItem === editLink) && <Tooltip title={\"Link related clues\"}>\r\n            <CompareArrowsRoundedIcon\r\n                className={linkMode ? 'editIconSelected' : 'editIcon'}\r\n                style={{ marginLeft: 'auto' }}\r\n                onClick={handleClickToLink} />\r\n        </Tooltip>}\r\n    </li>\r\n}\r\n\r\nexport default EditableClue;\r\n","import {DIRECTIONS, HORIZONTAL, TILE_ABOVE, TILE_BELOW, TILE_LEFT, TILE_RIGHT, VERTICAL} from \"./constants\";\r\nimport difference from \"lodash/difference\";\r\n\r\nexport const getOppositeDirection = direction => {\r\n    if(DIRECTIONS.includes(direction)) {\r\n        return difference(DIRECTIONS, [direction])[0];\r\n    } else {\r\n        throw new Error(\"tried to get opposite direction of \" + direction);\r\n    }\r\n}\r\n\r\nexport const prepTileConfig = {\r\n    VERTICAL: {\r\n        DIRECTION: VERTICAL,\r\n        NEXT_TILE: TILE_BELOW,\r\n        PREV_TILE: TILE_ABOVE\r\n    },\r\n    HORIZONTAL: {\r\n        DIRECTION: HORIZONTAL,\r\n        NEXT_TILE: TILE_RIGHT,\r\n        PREV_TILE: TILE_LEFT\r\n    }\r\n}\r\n\r\nexport const indexFromClueId = clueId => clueId.replace(/[A-Z]/g, '');\r\nexport const directionFromClueId = clueId => clueId.replace(/[0-9]/g, '');\r\n","import {\r\n    ARROW_KEY_MAPPINGS, BACKSPACE_KEY, DELETE_KEY,\r\n    HORIZONTAL,\r\n    HORIZONTAL_ARROW_KEYS, SPACE_KEY,\r\n    VERTICAL,\r\n    VERTICAL_ARROW_KEYS\r\n} from \"./constants\";\r\nimport { prepTileConfig } from \"./utils\";\r\n\r\nimport { getOppositeDirection } from \"./utils\";\r\n\r\nconst arrowKeyPressInDirection = (pressedDirection, key, game, activateTile) => {\r\n    const arrowKeyMapping = ARROW_KEY_MAPPINGS[key];\r\n\r\n    if(game.selectedTile.x === null || game.selectedTile.y === null) {\r\n        console.log(\"Issue with selected tile\", game.selectedTile)\r\n    }\r\n\r\n    if(game.direction !== pressedDirection) {\r\n        let nextTile = arrowKeyMapping(game.selectedTile)\r\n        if(!game.getClueIdFromTile(game.selectedTile, pressedDirection)) {\r\n            for(let i = 1; game._isLocationOnBoard(nextTile); i++, nextTile = arrowKeyMapping(game.selectedTile, i)) {\r\n                if(game.isTile(nextTile)) {\r\n                    let tileDirection = pressedDirection;\r\n                    if(!game.getClueIdFromTile(nextTile, tileDirection)) {\r\n                        tileDirection = getOppositeDirection(pressedDirection);\r\n                    }\r\n                    game.direction = tileDirection;\r\n                    activateTile(nextTile, tileDirection);\r\n                    return;\r\n                }\r\n            }\r\n        } else {\r\n            game.direction = pressedDirection;\r\n            activateTile(game.selectedTile, pressedDirection);\r\n        }\r\n    } else {\r\n        if(arrowKeyMapping) {\r\n            let nextTile = arrowKeyMapping(game.selectedTile);\r\n            for(let i = 1; game._isLocationOnBoard(nextTile); i++) {\r\n                nextTile = arrowKeyMapping(game.selectedTile, i);\r\n                if(game.isTile(nextTile)) {\r\n                    if(i !== 1) {\r\n                        if(!game.getClueIdFromTile(nextTile, pressedDirection)) {\r\n                            pressedDirection = Object.keys(game.board[nextTile.y][nextTile.x].clueNumberLink)[0];\r\n                        }\r\n                        game.direction = pressedDirection;\r\n                    }\r\n                    activateTile(nextTile, pressedDirection)\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const arrowKeyPress = (key, game, activateTile) => {\r\n    if(HORIZONTAL_ARROW_KEYS.includes(key)) {\r\n        arrowKeyPressInDirection(HORIZONTAL, key, game, activateTile);\r\n    } else if(VERTICAL_ARROW_KEYS.includes(key)) {\r\n        arrowKeyPressInDirection(VERTICAL, key, game, activateTile);\r\n    }\r\n}\r\n\r\nexport const letterKeyPres = (key, game, activateTile) => {\r\n    if(!game.isTile(game.selectedTile)) {\r\n        return;\r\n    }\r\n    game.getTileBoardItem(game.selectedTile).guess = key.toUpperCase();\r\n    moveSelectorOneSpaceInDirection(game, activateTile);\r\n}\r\n\r\nconst moveSelectorOneSpaceInDirection = (game, activateTile) => {\r\n    const NEXT_TILE = prepTileConfig[game.direction].NEXT_TILE;\r\n\r\n    const clueId = game.getClueIdFromTile(game.selectedTile, game.direction);\r\n    const clue = game.getClue(clueId);\r\n    const wordLength = (game.direction === HORIZONTAL ? clue.endTile.x - clue.tile.x : clue.endTile.y - clue.tile.y) + 1;\r\n    let keepSearching = true;\r\n    let reachedEnd = false;\r\n\r\n    for(let i = 1, tileIndex = 1; i < wordLength && keepSearching; i++, tileIndex++) {\r\n        let nextTile = NEXT_TILE(reachedEnd ? clue.tile : game.selectedTile, tileIndex);\r\n        if(!game.isTile(nextTile) && !reachedEnd) {\r\n            tileIndex = 0; // reset to start of clue\r\n            nextTile = NEXT_TILE(clue.tile, tileIndex);\r\n            reachedEnd = true;\r\n        }\r\n\r\n        if (game.isTile(nextTile)) {\r\n            if (!game.getTileBoardItem(nextTile).guess) {\r\n                activateTile(nextTile, game.direction)\r\n                keepSearching = false;\r\n            }\r\n        }\r\n    }\r\n    if(keepSearching) {\r\n        const nextTile = game.isTile(NEXT_TILE(game.selectedTile)) ? NEXT_TILE(game.selectedTile) : game.selectedTile;\r\n        activateTile(nextTile, game.direction);\r\n    }\r\n}\r\n\r\nconst removeGuessFromTile = (selectedTile, game, setTimestamp) => {\r\n    game.getTileBoardItem(selectedTile).guess = '';\r\n    setTimestamp(Date.now()); // force rerender\r\n}\r\n\r\nexport const clearLetterKey = (key, game, activateTile, setTimestamp) => {\r\n    const { DIRECTION, NEXT_TILE, PREV_TILE } = prepTileConfig[game.direction];\r\n    const tile = game.selectedTile;\r\n    if(key === SPACE_KEY) {\r\n        // if(game.previousKeyWasDelete) {\r\n        //     moveSelectorOneSpaceInDirection(game, activateTile)\r\n        //     game.previousKeyWasDelete = true;\r\n        //     return;\r\n        // }\r\n        game.previousKeyWasDelete = true;\r\n        removeGuessFromTile(tile, game, setTimestamp);\r\n        if(game.isTile(NEXT_TILE(tile))) {\r\n            activateTile(NEXT_TILE(tile))\r\n        } else {\r\n            const clueId = game.getClueIdFromTile(tile, DIRECTION);\r\n            const clue = game.getClue(clueId);\r\n            activateTile(clue.tile)\r\n        }\r\n    } else if(key === BACKSPACE_KEY) {\r\n        if(game.getTileBoardItem(tile).guess !== '') {\r\n            removeGuessFromTile(tile, game, setTimestamp);\r\n        } else if (game.isTile(PREV_TILE(tile))) {\r\n            removeGuessFromTile(PREV_TILE(tile), game, setTimestamp);\r\n            game.previousKeyWasDelete = true;\r\n            activateTile(PREV_TILE(tile))\r\n        }\r\n    } else if(key === DELETE_KEY) {\r\n        removeGuessFromTile(tile, game, setTimestamp);\r\n    }\r\n}\r\n\r\nexport const tabKeyPress = (shiftKey, game, activateTile) => {\r\n    const indexModifier = shiftKey ? -1 : 1;\r\n    let direction = game.direction;\r\n    let clueIndex = game.clues[direction].findIndex(item => item.id === game.getClueIdFromTile()) + indexModifier;\r\n\r\n    if (!game.clues[direction][clueIndex]) {\r\n        direction = getOppositeDirection(direction)\r\n        if (clueIndex < 0) {\r\n            clueIndex = game.clues[direction].length - 1;\r\n        } else {\r\n            clueIndex = 0;\r\n        }\r\n    }\r\n    // TODO don't just tab to the beginnign of the next clue, make sure it has space or skip it\r\n    game.direction = direction;\r\n    activateTile(game.clues[direction][clueIndex].tile, direction);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport useKeypress from 'react-use-keypress'\r\n\r\nimport './index.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getOppositeDirection } from \"./utils\";\r\nimport { arrowKeyPress, clearLetterKey, letterKeyPres, tabKeyPress } from \"./handleInput\";\r\n\r\nimport intersection from 'lodash/intersection';\r\n\r\nimport { fonts } from 'js-pixel-fonts';\r\n\r\nimport {\r\n    ALPHABET,\r\n    ALPHABET_LOWER,\r\n    ALL_DIRECTIONAL_KEYS,\r\n    HORIZONTAL_ARROW_KEYS,\r\n    VERTICAL_ARROW_KEYS,\r\n    CLEAR_LETTER_KEYS,\r\n    TAB\r\n} from './constants'\r\n\r\nconst useStyles = makeStyles(() => ({ root: { flexGrow: 1 }}));\r\nconst useCrosswordStyles = makeStyles(() => ({\r\n    block: { fill: '#e8a87c' },\r\n    tile: { fill: '#fafafa', stroke: 'none', pointerEvents: 'visible' },\r\n    gameBoardBackground: { zIndex: '-100', fill: '#fafafa', stroke: 'none' },\r\n    finishMessagePixel: { fill: '#c38d9e' },\r\n    selectedTile: { fill: '#c38d9e' },\r\n    gameWon: { fill: '#85dcb0' },\r\n    highlighted: { fill: '#85dcb0' },\r\n    linkHighlighted: { fill: '#e8a87c', opacity: '50%' },\r\n    selectedClue: { backgroundColor: '#85dcb0', },\r\n    secondaryClue: { backgroundColor: '#85dcb0', opacity: '10%' },\r\n    grid: { stroke: '#e27d60' },\r\n    text: { cursor: 'default' },\r\n    '*::-webkit-scrollbar': { width: '10px' },\r\n    '*::-webkit-scrollbar-track': { background: '#f1f1f1' },\r\n    '*::-webkit-scrollbar-thumb': { background: '#41b3ac' },\r\n    '*::-webkit-scrollbar-thumb:hover': { background: '#555' }\r\n}))\r\n\r\nconst grid = (nTiles, tileSize) => {\r\n    let grid = '';\r\n    const lineLength = (nTiles * tileSize) + 0.5;\r\n    for(let i = 0; i < nTiles + 1; i++) {\r\n        const lineStart = (i * tileSize);\r\n        grid = `${grid} M0.00,${lineStart} l${lineLength},0.00 M${lineStart},0.00 l0.00,${lineLength} `;\r\n    }\r\n    return grid;\r\n}\r\n\r\nconst Cell = ({\r\n        classes,\r\n        onClick,\r\n        tileSize,\r\n        onContextMenu,\r\n        children,\r\n        x, y\r\n          }) => {\r\n    return (\r\n        <g>\r\n            <rect\r\n                x={x}\r\n                y={y}\r\n                height={tileSize}\r\n                width={tileSize}\r\n                className={classes}\r\n                onClick={onClick}\r\n                onContextMenu={onContextMenu}\r\n            />\r\n            {children}\r\n        </g>\r\n    )\r\n}\r\n\r\nconst Tile = props => {\r\n    const {x, y, tileSize, numberOfTiles, onContextMenu, onClick, tileContent, classes} = props;\r\n    return (\r\n        <Cell\r\n            classes={classes}\r\n            {...props}>\r\n            {tileContent.circle && <circle cx={x + tileSize / 2} cy={y + tileSize / 2} r={(tileSize / 2) - 1.3} stroke=\"black\" strokeWidth=\"1\" fill=\"none\" />}\r\n            {tileContent.circle && tileContent.clueNumber && <rect x={x} y={y} width={(tileSize / 6) * 2} height={tileSize / 3.3} className={classes} />}\r\n            <text x={x + 1} y={y + 1.7} fontSize={`${9.75 / numberOfTiles}em`} alignmentBaseline=\"hanging\" style={{ letterSpacing: '-1px'}}\r\n                  className='clueNumber' onContextMenu={onContextMenu} onClick={onClick}>{tileContent.clueNumber || ''}</text>\r\n            <text x={x + (tileSize / 2)} y={y + (tileSize/7 * 6)} fontSize={`${27 / numberOfTiles}em`}\r\n                  textAnchor=\"middle\" className='guess' onContextMenu={onContextMenu} onClick={onClick}>{tileContent.guess}</text>\r\n        </Cell>\r\n    )\r\n}\r\n\r\nconst Block = props => <Cell className={props.classes} {...props} />\r\n\r\nconst Crossword = ({\r\n    game,\r\n    rightClick = null,\r\n    activateTile,\r\n    gameWon,\r\n    preTileClick = () => {},\r\n    postKeyPress = () => {},\r\n    preventCrosswordTyping = false,\r\n    innerRef\r\n}) => {\r\n    const classes = useStyles();\r\n    const crosswordClasses = useCrosswordStyles();\r\n\r\n    const [timestamp, setTimestamp] = useState(Date.now());\r\n\r\n    const preventKeyPress = useRef(false);\r\n\r\n    const loadGlyphs = () => {\r\n        game.customGlyphs.forEach(glyph => {\r\n            const key = Object.keys(glyph)[0];\r\n            fonts.sevenPlus.glyphs[key] = glyph[key];\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadGlyphs();\r\n    }, []);\r\n\r\n\r\n    useKeypress([\r\n        ...VERTICAL_ARROW_KEYS,\r\n        ...HORIZONTAL_ARROW_KEYS,\r\n        ...ALPHABET,\r\n        ...ALPHABET_LOWER,\r\n        ...CLEAR_LETTER_KEYS,\r\n        TAB\r\n    ], ({ key, shiftKey, repeat }) => {\r\n        if(preventKeyPress.current || gameWon || preventCrosswordTyping) {\r\n            return;\r\n        }\r\n        if(repeat) {\r\n            preventKeyPress.current = true;\r\n            setTimeout(() => preventKeyPress.current = false, 1);\r\n        }\r\n        setTimeout(() => {\r\n            if ([...ALL_DIRECTIONAL_KEYS].includes(key)) {\r\n                arrowKeyPress(key, game, activateTile);\r\n                game.previousKeyWasDelete = false;\r\n                return;\r\n            }\r\n            if (key.length === 1 && key.match(/[a-z]/i)) {\r\n                letterKeyPres(key, game, activateTile);\r\n                postKeyPress();\r\n                game.previousKeyWasDelete = false;\r\n                return;\r\n            }\r\n            if (CLEAR_LETTER_KEYS.includes(key)) {\r\n                clearLetterKey(key, game, activateTile, setTimestamp);\r\n                return;\r\n            }\r\n            if (TAB === key) {\r\n                tabKeyPress(shiftKey, game, activateTile);\r\n            }\r\n        }, 0);\r\n    });\r\n\r\n    const placeTile = (tileContent, x, y) => {\r\n        const tile = { x, y };\r\n        const tileProps = {\r\n            key: `${x}${y}`,\r\n            tileContent,\r\n            y: y * game.tileSize,\r\n            x: x * game.tileSize,\r\n            tileSize: game.tileSize,\r\n            numberOfTiles: game.board.length\r\n        };\r\n\r\n        const handleTileClick = () => {\r\n            preTileClick();\r\n            let oppositeDirection = getOppositeDirection(game.direction);\r\n            const updateDirection =\r\n                // clicking on already selected tile should change direction\r\n                (game.selectedTile.x === x && game.selectedTile.y === y && game.getClueIdFromTile(tile, oppositeDirection)) ||\r\n                // moving to tile which does not have current direction should change direction\r\n                !game.getClueIdFromTile(tile, game.direction) ?\r\n                    oppositeDirection : game.direction;\r\n\r\n            activateTile(tile, updateDirection)\r\n        }\r\n\r\n        const selectedClueId = game.getClueIdFromTile();\r\n\r\n        let classes;\r\n        if(gameWon) {\r\n            classes = game.board[y][x].finishMessagePixel === 1 ? // using y/x because end message sequence does not use initBoard\r\n                crosswordClasses.finishMessagePixel : crosswordClasses.gameWon;\r\n        } else if(tileContent.blank) {\r\n            classes = crosswordClasses.block;\r\n        } else if(game.selectedTile.x === x && game.selectedTile.y === y) {\r\n            classes = crosswordClasses.selectedTile;\r\n        } else if (selectedClueId === tileContent.clueNumberLink[game.direction]) {\r\n            classes = crosswordClasses.highlighted;\r\n        } else if (intersection(game.getClue(selectedClueId).linkClues, Object.values(tileContent.clueNumberLink)).length > 0) {\r\n            classes = crosswordClasses.linkHighlighted;\r\n        }\r\n\r\n        return (\r\n            !tileContent.blank ?\r\n                <Tile\r\n                    {...tileProps}\r\n                    classes={`${crosswordClasses.tile} ${classes}`}\r\n                    onClick={handleTileClick}\r\n                    onContextMenu={event => { rightClick ? rightClick(event, tile, game) : handleTileClick() }}\r\n                /> : <Block\r\n                    {...tileProps} classes={classes}\r\n                    onContextMenu={event => rightClick ? rightClick(event, tile, game) : handleTileClick()}\r\n                />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} style={{ maxWidth: game.gameBoardSize, maxHeight: game.gameBoardSize }}>\r\n            <div style={{ display: 'contents' }}>\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox={`-1 -1 ${game.gameBoardSize + 2}\r\n                    ${game.gameBoardSize + 2}`}\r\n                    style={{ margin: '41px 0', padding: '0 15px', float: 'middle', outline: 'none', userSelect: 'none' }}\r\n                    width='100%'\r\n                    onContextMenu={event => { event.preventDefault() }}\r\n                    tabIndex='1'\r\n                    onKeyDown={event => event.key === TAB && event.preventDefault() }\r\n                    ref={innerRef}\r\n                >\r\n                    <rect className={crosswordClasses.gameBoardBackground} x='-1' y='-1' width={game.gameBoardSize + 2} height={game.gameBoardSize + 2} />\r\n                    <g>\r\n                        {game.board.map((row, y) =>\r\n                            row.map((tile, x) => placeTile(tile, x, y))\r\n                        )}\r\n                    </g>\r\n                    <g>\r\n                        <path d={grid(game.board.length, game.tileSize)} className=\"grid\" vectorEffect=\"non-scaling-stroke\" />\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Crossword;\r\n","import React, {useRef, useState} from \"react\";\r\nimport useKeypress from \"react-use-keypress\";\r\n\r\nimport {ENTER} from \"../Crossword/constants\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst TITLE_ID = 'TITLE_EDIT'\r\n\r\nexport const PageHeader = ({ title, children, classes, saveGameWithTitle, registerActiveItem }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [titleText, setTitleText] = useState(title);\r\n    const lastBlurTime = useRef(Date.now());\r\n\r\n    useKeypress(ENTER, () => {\r\n        if(editMode) {\r\n            handleBlur();\r\n        }\r\n    });\r\n\r\n    const handleChange = event => setTitleText(event.target.value);\r\n\r\n    const handleBlur = () => {\r\n        saveGameWithTitle(titleText);\r\n        setEditMode(false);\r\n        lastBlurTime.current = Date.now();\r\n    }\r\n\r\n    const handleClickToEdit = () => {\r\n        if(!editMode && lastBlurTime.current + 500 < Date.now()) {\r\n            setEditMode(true);\r\n            registerActiveItem(TITLE_ID);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} >\r\n            <Box my={4} className={classes.root}>\r\n                <Box className={classes.test1}>\r\n                    <Grid container item justify=\"space-between\" spacing={0}>\r\n                        <Grid item>\r\n                            <Typography variant=\"h4\" component=\"div\" >{editMode ?\r\n                                <input autoFocus type=\"text\" value={titleText} onChange={handleChange} onBlur={handleBlur} /> :\r\n                                <span onClick={handleClickToEdit} style ={{ cursor: 'pointer' }}>{title}</span>}\r\n                                <EditIcon\r\n                                className={editMode ? 'editIconSelected' : 'editIcon'}\r\n                                style={{ marginLeft: '10px', cursor: 'pointer' }}\r\n                                onClick={handleClickToEdit} />\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {children}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Box>\r\n            <Box my={4} className={classes.borderGradient}>\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default PageHeader;","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CompareArrowsRoundedIcon from '@material-ui/icons/CompareArrowsRounded';\r\nimport RemoveCircleSharpIcon from '@material-ui/icons/RemoveCircleSharp';\r\nimport AddCircleSharpIcon from '@material-ui/icons/AddCircleSharp';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n        listStyle: 'none',\r\n        cursor: 'default',\r\n        textAlign: 'center',\r\n        padding: '0',\r\n        '& li': {\r\n            padding: '10px 0',\r\n            fontSize: '1.2em',\r\n        },\r\n        '& svg': {\r\n            verticalAlign: 'bottom'\r\n        }\r\n    },\r\n    header: {\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nconst HowTo = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div style={{ color: 'white' }}>\r\n            <Typography className={classes.header} variant=\"h4\" component=\"div\" >How to design a crossword</Typography>\r\n            <ol className={classes.list} >\r\n                <li>Right click to add block tiles to your crossword.</li>\r\n                <li>Shift-right click to add circle tiles to your crossword.</li>\r\n                <li>Use <EditIcon /> to edit the text of your clues and the title of your crossword.</li>\r\n                <li>Use <CompareArrowsRoundedIcon /> to link one clue to another clue from the clue lists.</li>\r\n                <li>Use <AddCircleSharpIcon /> and <RemoveCircleSharpIcon /> to change the size of your crossword.</li>\r\n                <li>Use <LoopIcon /> to place blocks with rotational symmetry.</li>\r\n                <li>Create a \"game message\" to appear when the crossword is completed. </li>\r\n                <li>Use <PlayCircleOutlineIcon /> to test your \"game complete\" message.</li>\r\n                <li>Please save your game regularly. You can load these files to continue editing later.</li>\r\n                <li>Click \"Publish\" when you are finished designing your crossword and it is ready to be played.</li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowTo;","import cloneDeep from \"lodash/cloneDeep\";\r\nimport {directionFromClueId, indexFromClueId, getOppositeDirection, prepTileConfig} from \"./utils\";\r\nimport {HORIZONTAL, VERTICAL} from \"./constants\";\r\nimport min from \"lodash/min\";\r\nimport compact from \"lodash/compact\";\r\n\r\nconst clueId = (direction, i) => `${direction}${i}`;\r\n\r\nexport const emptyTile = () => ({ answer: '', guess: '' });\r\nexport const block = () => ({ blank: 'yes' });\r\nexport const emptyClue = () => ({ clue: '' });\r\n\r\nexport const ADD_TO_START = 'ADD_TO_START';\r\nexport const ADD_TO_END = 'ADD_TO_END';\r\nexport const DELETE_START = 'DELETE_START';\r\nexport const DELETE_END = 'DELETE_END';\r\n\r\nexport const modifyBoardLengthConfig = {\r\n    ADD_TO_START: {\r\n        method: (array, value) => array.unshift(value),\r\n        adjust: ({ x, y }) => ({ x: x + 1, y: y + 1 })\r\n    },\r\n    ADD_TO_END: {\r\n        method: (array, value) => array.push(value),\r\n        adjust: tile => tile\r\n    },\r\n    DELETE_START: {\r\n        method: array => array.shift(),\r\n        adjust: ({ x, y }) => ({ x: x - 1, y: y - 1 })\r\n    },\r\n    DELETE_END: {\r\n        method: array => array.pop(),\r\n        adjust: tile => tile\r\n    }\r\n}\r\n\r\nconst isStartModification = modificationType => modificationType === ADD_TO_START || modificationType === ADD_TO_END;\r\n\r\nconst modifyBoardLength = (game, modificationType) => {\r\n    const gameC = cloneDeep(game);\r\n    const { method } = modifyBoardLengthConfig[modificationType];\r\n    let newRow;\r\n    if(isStartModification(modificationType)) {\r\n        const newArrayLength = game.board.length + 1;\r\n        newRow = new Array(newArrayLength);\r\n        for (let i = 0; i < newArrayLength; i++) { // faster than .forEach or .fill().map(...)\r\n            newRow[i] = emptyTile();\r\n        }\r\n    }\r\n    gameC.board.forEach(row => method(row, emptyTile()));\r\n    method(gameC.board, newRow);\r\n    return gameC;\r\n}\r\n\r\nconst addBoardFunctions = game => {\r\n    const getTileBoardItem = ({x , y}) => game.board[y][x];\r\n    const _isLocationOnBoard = ({ x, y }) => isLocationOnBoard(x, y);\r\n    const isLocationOnBoard = (x, y) => x >= 0 && y >= 0 && x < game.board.length && y < game.board.length;\r\n    const isTile = ({ x, y }) => isTileAtCoords(x, y);\r\n    const isTileAtCoords = (x, y) => {\r\n        if(!isLocationOnBoard(x, y)) {\r\n            return false;\r\n        }\r\n        return !getTileBoardItem({ x, y}).blank;\r\n    }\r\n    game.getTileBoardItem = getTileBoardItem;\r\n    game._isLocationOnBoard = _isLocationOnBoard;\r\n    game.isLocationOnBoard = isLocationOnBoard;\r\n    game.isTile = isTile;\r\n    game.isTileAtCoords = isTileAtCoords;\r\n}\r\n\r\nexport const initDesignBoard = (oldGame, modificationType = '') => {\r\n    addBoardFunctions(oldGame);\r\n    const modifyBoard = modificationType ? game => modifyBoardLength(game, modificationType) : game => game;\r\n    const board = modifyBoard(oldGame).board.map(row => row.map(cell => cell.blank ? cell : { guess: cell.guess, answer: cell.answer, circle: cell.circle }));\r\n    const gameFinishedMessage = oldGame.gameFinishedMessage;\r\n\r\n    const NEW_BOARD_ADJUSTER = modificationType ? modifyBoardLengthConfig[modificationType].adjust : tile => tile;\r\n\r\n    const getTileBoardItem = ({x , y}) => board[y][x];\r\n    const _isLocationOnBoard = ({ x, y }) => isLocationOnBoard(x, y);\r\n    const isLocationOnBoard = (x, y) => x >= 0 && y >= 0 && x < board.length && y < board.length;\r\n    const isTile = ({ x, y }) => isTileAtCoords(x, y);\r\n    const isTileAtCoords = (x, y) => {\r\n        if(!isLocationOnBoard(x, y)) {\r\n            return false;\r\n        }\r\n        return !getTileBoardItem({ x, y}).blank;\r\n    }\r\n\r\n    let clueNumber = 0;\r\n    const clues = {\r\n        HORIZONTAL: [],\r\n        VERTICAL: []\r\n    }\r\n\r\n    let totalNumberOfBoardLetters = 0;\r\n\r\n    if(!oldGame.clues.HORIZONTAL || !oldGame.clues.VERTICAL) {\r\n        console.log('Weird Error')\r\n        return;\r\n    }\r\n\r\n    const updateClueNumber = (newClueNumber, board, tile) => {\r\n        if(clueNumber !== newClueNumber) {\r\n            return;\r\n        }\r\n        clueNumber++;\r\n        board[tile.y][tile.x].clueNumber = clueNumber;\r\n    }\r\n\r\n    const prepareTile = ({ DIRECTION, NEXT_TILE, PREV_TILE }, tile, newClueNumber) => {\r\n        const prevTileCoords = PREV_TILE(tile);\r\n        const isNextTile = isTile(NEXT_TILE(tile));\r\n\r\n        if(!isTile(prevTileCoords)) { // is previous tile block?\r\n            if(isNextTile) { // is not single wide tile\r\n                updateClueNumber(newClueNumber, board, tile);\r\n                const clue = emptyClue();\r\n\r\n                clue.tile = tile;\r\n                clue.id = clueId(DIRECTION, clues[DIRECTION].length);\r\n                clue.clueNumber = clueNumber;\r\n                clue.linkClues = [];\r\n\r\n                board[tile.y][tile.x].clueNumberLink[DIRECTION] = clue.id;\r\n                clues[DIRECTION].push(clue);\r\n            }\r\n        } else {\r\n            const prevTile = board[prevTileCoords.y][prevTileCoords.x];\r\n            board[tile.y][tile.x].clueNumberLink[DIRECTION] = prevTile.clueNumberLink[DIRECTION];\r\n            if(!isNextTile) {\r\n                clues[DIRECTION].find(clue => clue.id === prevTile.clueNumberLink[DIRECTION]).endTile = tile;\r\n            }\r\n        }\r\n    }\r\n\r\n    board.forEach((row, y) => {\r\n        row.forEach((t, x) => {\r\n            const newClueNumber = clueNumber;\r\n            if(t.blank) {\r\n                return;\r\n            }\r\n\r\n            totalNumberOfBoardLetters++;\r\n\r\n            const tile = {x, y}\r\n            board[y][x].clueNumberLink = {};\r\n\r\n            prepareTile(prepTileConfig.HORIZONTAL, tile, newClueNumber);\r\n            prepareTile(prepTileConfig.VERTICAL, tile, newClueNumber);\r\n        })\r\n    });\r\n\r\n    const isTileOnNewBoard = (tile, direction) => {\r\n        return isTile(tile) && !!getTileBoardItem(tile).clueNumberLink[direction];\r\n    }\r\n\r\n    const isTileOnOldBoard = (tile, direction) => {\r\n        return oldGame.isTile(tile) && oldGame.getTileBoardItem(tile).clueNumberLink && !!oldGame.getTileBoardItem(tile).clueNumberLink[direction];\r\n    }\r\n\r\n    const lookupClueOnNewBoard = (clue, { DIRECTION, NEXT_TILE }) => {\r\n        for(let i = 0; i <= 2; i++) {\r\n            const tile = NEXT_TILE(clue.tile, i);\r\n            if(isTileOnNewBoard(NEW_BOARD_ADJUSTER(tile), DIRECTION) && isTileOnOldBoard(tile, DIRECTION)) { // who are we attaching links to\r\n                return getTileBoardItem(NEW_BOARD_ADJUSTER(tile)).clueNumberLink[DIRECTION];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    oldGame.clues[HORIZONTAL].concat(oldGame.clues[VERTICAL]).forEach(clue => {\r\n        const direction = directionFromClueId(clue.id);\r\n        if(clue.linkClues.length > 0 || clue.clue) {\r\n            const newClueId = lookupClueOnNewBoard(clue, prepTileConfig[direction]); // who are we attaching links to\r\n            if(newClueId) {\r\n                const newClueLinks = compact(clue.linkClues.map(oldLinkId => {\r\n                    const linkDirection = directionFromClueId(oldLinkId);\r\n                    const oldLink = oldGame.clues[linkDirection][indexFromClueId(oldLinkId)]; // TODO what direction is the old link going in?\r\n                    return lookupClueOnNewBoard(oldLink, prepTileConfig[linkDirection]);\r\n                }));\r\n                clues[direction][indexFromClueId(newClueId)].linkClues.push(...newClueLinks);\r\n                clues[direction][indexFromClueId(newClueId)].clue = clue.clue;\r\n            }\r\n        }\r\n    })\r\n\r\n    const newTile = NEW_BOARD_ADJUSTER(oldGame.selectedTile);\r\n    const nearestSelectedClueId = lookupClueOnNewBoard({ tile: oldGame.selectedTile }, prepTileConfig[oldGame.direction]);\r\n    const direction = oldGame.direction;\r\n    const selectedTile = nearestSelectedClueId ?\r\n        nearestSelectedClueId === getTileBoardItem(newTile).clueNumberLink[direction] ?\r\n            newTile : clues[directionFromClueId(nearestSelectedClueId)][indexFromClueId(nearestSelectedClueId)].tile\r\n        : clues[direction][0].tile;\r\n\r\n    const gameBoardSize =  min([window.screen.height, window.screen.width, 500]);\r\n\r\n    const game = {\r\n        board,\r\n        title: oldGame.title,\r\n        clues,\r\n        selectedTile,\r\n        direction,\r\n        customGlyphs: [],\r\n        totalNumberOfBoardLetters,\r\n        _isLocationOnBoard,\r\n        isLocationOnBoard,\r\n        isTile,\r\n        isTileAtCoords,\r\n        getTileBoardItem,\r\n        gameFinishedMessage,\r\n        previousKeyWasDelete: false,\r\n        gameBoardSize,\r\n        tileSize: gameBoardSize/board.length,\r\n        getClue: clueId => clues[directionFromClueId(clueId)][indexFromClueId(clueId)],\r\n        getClueIdFromTile: (tile, direction) => game.getTileBoardItem(tile ? tile : game.selectedTile).clueNumberLink[direction ? direction: game.direction],\r\n        getSecondaryClueIdFromTile: (tile, direction) => game.getTileBoardItem(tile ? tile : game.selectedTile).clueNumberLink[getOppositeDirection(direction ? direction: game.direction)]\r\n    }\r\n    return game;\r\n}\r\n\r\nexport const emptyDesignBoard = initDesignBoard({\r\n    board: [\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()],\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()],\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()],\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()],\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()],\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()],\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()],\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()],\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()],\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()],\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()],\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()],\r\n        [emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile(), emptyTile()]\r\n    ],\r\n    clues: {\r\n        HORIZONTAL: [\r\n        ],\r\n        VERTICAL: [\r\n        ]\r\n    },\r\n    title: 'Name your crossword',\r\n    gameFinishedMessage: 'you win',\r\n    selectedTile: { x: 0, y: 0 },\r\n    direction: HORIZONTAL\r\n});\r\n","import {pickerOpts} from \"../Landing\";\r\n\r\nexport const saveGame = async data => {\r\n    const jsonSave = JSON.stringify(data);\r\n\r\n    // create a new handle\r\n    const newHandle = await window.showSaveFilePicker(pickerOpts);\r\n\r\n    // create a FileSystemWritableFileStream to write to\r\n    const writableStream = await newHandle.createWritable();\r\n\r\n    // write our file\r\n    const blob = new Blob([jsonSave], {type : 'application/json'});\r\n    await writableStream.write(blob);\r\n\r\n    // close the file and write the contents to disk.\r\n    await writableStream.close();\r\n}\r\n\r\nexport const saveAndLeave = async (data, leaveGame) => {\r\n    try {\r\n        await saveGame(data);\r\n        await leaveGame();\r\n    } catch (e) {\r\n        alert(e);\r\n    }\r\n}\r\n","import {pickerOpts} from \"../Landing\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport { initDesignBoard } from \"../Crossword/initBoard\";\r\n\r\nconst loadFile = async setGameData => {\r\n    let fileHandle;\r\n    // open file picker, destructure the one element returned array\r\n\r\n    [fileHandle] = await window.showOpenFilePicker(pickerOpts);\r\n    const fileData = await fileHandle.getFile();\r\n    const jsonFile = await fileData.text();\r\n\r\n    const data = cloneDeep(JSON.parse(jsonFile));\r\n    setGameData(initDesignBoard(data));\r\n}\r\n\r\nexport default loadFile;\r\n","import React, {useRef, useState} from \"react\";\r\nimport useKeypress from \"react-use-keypress\";\r\n\r\nimport {ENTER} from \"../Crossword/constants\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst GAME_FINISH_MESSAGE_ID = 'GAME_FINISH_MESSAGE_ID';\r\n\r\nconst EditableGameCompleteMessage = ({ message, saveGameWithFinishMessage, registerActiveItem, demoEndGameMessage }) => {\r\n    const [messageText, setMessage] = useState(message);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const lastBlurTime = useRef(Date.now());\r\n\r\n    useKeypress(ENTER, () => {\r\n        if(editMode) {\r\n            handleBlur();\r\n        }\r\n    });\r\n\r\n    const handleChange = event => setMessage(event.target.value);\r\n\r\n    const handleBlur = () => {\r\n        saveGameWithFinishMessage(messageText);\r\n        setEditMode(false);\r\n        lastBlurTime.current = Date.now();\r\n    }\r\n\r\n    const handleClickToEdit = () => {\r\n        if(!editMode && lastBlurTime.current + 500 < Date.now()) {\r\n            setEditMode(true);\r\n            registerActiveItem(GAME_FINISH_MESSAGE_ID);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <span style={{ marginRight: '20px' }}>Game completed message:</span>\r\n            {editMode ?\r\n                <input autoFocus type=\"text\" value={messageText} onChange={handleChange} onBlur={handleBlur}/> :\r\n                <span onClick={handleClickToEdit} style={{cursor: 'pointer'}}>{messageText}</span>\r\n            }\r\n            <EditIcon\r\n                className={editMode ? 'editIconSelected' : 'editIcon'}\r\n                style={{ marginLeft: '10px', cursor: 'pointer' }}\r\n                onClick={handleClickToEdit} />\r\n            <Tooltip title={\"Demo message\"}>\r\n                <PlayCircleOutlineIcon\r\n                    className={editMode ? 'editIconSelected' : 'editIcon'}\r\n                    style={{ marginLeft: '10px', cursor: 'pointer' }}\r\n                    onClick={demoEndGameMessage} />\r\n            </Tooltip>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditableGameCompleteMessage;\r\n","import cloneDeep from \"lodash/cloneDeep\";\r\nimport {fonts, renderPixels} from \"js-pixel-fonts\";\r\n\r\nexport const activateEndGameMessage = (game, setGameWon, setTimestamp) => {\r\n    const boardWidth = game.board.length;\r\n    if(boardWidth < 9) {\r\n        setTimeout(() => {\r\n            setGameWon(false);\r\n            game.board = tileBoardSnapshot;\r\n            setTimestamp(Date.now())\r\n        }, 10000);\r\n        return;\r\n    }\r\n\r\n    const tileBoardSnapshot = cloneDeep(game.board);\r\n    const messageBoard = cloneDeep(game.board);\r\n    const messageBoardSnapshots = []\r\n\r\n    // config\r\n    const startDelay = 1000;\r\n    const messageSpeed = 175;\r\n    const finishMessagePixels = renderPixels(game.gameFinishedMessage, fonts.sevenPlus);\r\n\r\n    const pixelDisplayHeight = finishMessagePixels.length;\r\n    const numberOfPixelRenders = finishMessagePixels[0].length;\r\n\r\n    const yStart = Math.ceil((boardWidth - pixelDisplayHeight) / 2);\r\n    for(let i = 0; i < numberOfPixelRenders; i++) {\r\n        for(let y = 0; y < pixelDisplayHeight; y++) {\r\n            for(let x = 0; x < boardWidth; x ++) {\r\n                if(x === boardWidth - 1) {\r\n                    messageBoard[y + yStart][x].finishMessagePixel = finishMessagePixels[y].shift();\r\n                } else {\r\n                    messageBoard[y + yStart][x].finishMessagePixel = messageBoard[y + yStart][x + 1].finishMessagePixel;\r\n                }\r\n            }\r\n        }\r\n        messageBoardSnapshots.push(cloneDeep(messageBoard));\r\n    }\r\n    messageBoardSnapshots.forEach((snapshotOfBoard, i) => setTimeout(() => { game.board = snapshotOfBoard; setTimestamp(Date.now()) }, startDelay + (messageSpeed * i)));\r\n    const gameTimeEnd = startDelay + (messageBoardSnapshots.length * messageSpeed);\r\n    setTimeout(() => {\r\n        setGameWon(false);\r\n        game.board = tileBoardSnapshot;\r\n        setTimestamp(Date.now())\r\n    }, gameTimeEnd + startDelay);\r\n}","import {getOppositeDirection} from \"../Crossword/utils\";\r\n\r\nexport const focusClues = (game, clueRefs) => {\r\n    const primaryClueId = game.getClueIdFromTile(game.selectedTile, game.direction);\r\n    const secondaryClueId = game.getClueIdFromTile(game.selectedTile, getOppositeDirection(game.direction));\r\n\r\n    if(secondaryClueId) {\r\n        clueRefs[secondaryClueId].focus();\r\n    }\r\n    clueRefs[primaryClueId].focus();\r\n}\r\n","import React, {useRef, useState} from 'react';\r\nimport EditableClue, {EDIT_LINK} from './EditableClue'\r\nimport Crossword from \"../Crossword\";\r\nimport EditablePageHeader from \"./EditablePageHeader\";\r\nimport HowTo from \"./HowTo\";\r\n\r\nimport RemoveCircleSharpIcon from '@material-ui/icons/RemoveCircleSharp';\r\nimport AddCircleSharpIcon from '@material-ui/icons/AddCircleSharp';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport pull from \"lodash/pull\";\r\n\r\nimport {\r\n    ADD_TO_END,\r\n    ADD_TO_START,\r\n    DELETE_END,\r\n    DELETE_START,\r\n    emptyDesignBoard,\r\n    initDesignBoard\r\n} from \"../Crossword/initBoard\";\r\nimport {CLUE_COLUMN_TITLE, HORIZONTAL, VERTICAL} from \"../Crossword/constants\";\r\nimport {saveGame} from \"../SaveGame\";\r\nimport loadFile from \"../LoadGame\";\r\nimport {publish, verifyPublish} from \"./publishGame\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport EditableGameCompleteMessage from \"./EditableGameCompleteMessage\";\r\nimport {activateEndGameMessage} from \"../Play/endGame\";\r\nimport {focusClues} from \"../Play/utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: { flexGrow: 1 },\r\n    selectedClue: { backgroundColor: '#85dcb0' },\r\n    snackbar: { backgroundColor: '#41b3ac' },\r\n    block: { /*fill: #e27d60;*/ fill: '#e8a87c' },\r\n    tile: { fill: 'none', stroke: 'none', pointerEvents: 'visible' },\r\n    gameBoardBackground: { fill: '#fafafa', stroke: 'none' },\r\n    // gameWon .gameBoardBackground, .gameWon .selected {\r\n    gameWon: { fill: '#85dcb0', transition: 'fill 3s' },\r\n    finishMessagePixel: { fill: '#c38d9e' },\r\n    selected: { fill: '#c38d9e' },\r\n    highlighted: { fill: '#85dcb0' },\r\n    svg: { maxHeight: '600px '},\r\n    clueNumber: { fontSize: '0.8em' },\r\n    guess: { fontSize: '1.8em' },\r\n    grid: { stroke: '#e27d60' },\r\n    text: { cursor: 'default' }\r\n}));\r\n\r\nconst invertTile = (index, boardLength) => (index - boardLength + 1) * -1;\r\nconst getRotatedTile = (tile, boardLength) => ({ x: invertTile(tile.x, boardLength), y: invertTile(tile.y, boardLength) });\r\n\r\nconst Alert = props => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n\r\nconst Design = ({ classesParent }) => {\r\n    const [game, setGame] = useState(emptyDesignBoard);\r\n    const [publishErrorMessage, setPublishErrorMessage] = useState('');\r\n    const [howTo, setHowTo] = useState(false);\r\n    const [rotationalSymmetry, setRotationalSymmetry] = useState(false);\r\n    const clueRefs = useRef([]).current;\r\n    const crosswordRef = useRef({ focus: () => console.log(\"set focus failed\") });\r\n    const [demoGame, setDemoGame] = useState(false);\r\n\r\n    const activeItem = useRef('');\r\n\r\n    const [timestamp, setTimestamp] = useState(Date.now());\r\n\r\n    const activateTile = (\r\n        tile,\r\n        direction\r\n    ) => {\r\n        game.selectedTile = tile;\r\n        if(direction) {\r\n            game.direction = direction;\r\n        }\r\n        focusClues(game, clueRefs);\r\n        crosswordRef.current.focus();\r\n        setTimestamp(Date.now())\r\n    }\r\n\r\n    const toggleTileBlock = (event, tile, game) => {\r\n        event.preventDefault();\r\n        const t = game.getTileBoardItem(tile);\r\n        if(event.shiftKey) {\r\n            t.circle ? delete t.circle : t.circle = 'yes';\r\n        } else {\r\n            const isTile = game.isTile(tile);\r\n            isTile ? t.blank = 'yes' : delete t.blank;\r\n            if(rotationalSymmetry) {\r\n                const oppositeTile = game.getTileBoardItem(getRotatedTile(tile, game.board.length));\r\n                isTile ? oppositeTile.blank = 'yes' : delete oppositeTile.blank\r\n            }\r\n        }\r\n        setGame(initDesignBoard(game));\r\n    }\r\n\r\n    const saveGameWithTitle = title => {\r\n        const gameC = cloneDeep(game) // TODO do we need these clone deeps?\r\n        gameC.title = title;\r\n        activeItem.current = '';\r\n\r\n        setGame(initDesignBoard(gameC))\r\n    }\r\n\r\n    const saveGameWithFinishMessage = message => {\r\n        const gameC = cloneDeep(game) // TODO do we need these clone deeps?\r\n        gameC.gameFinishedMessage = message;\r\n        activeItem.current = '';\r\n\r\n        setGame(initDesignBoard(gameC))\r\n    }\r\n\r\n    const modifyBoardLength = modificationType => {\r\n        const gameC = cloneDeep(game)\r\n        setGame(initDesignBoard(gameC, modificationType));\r\n    }\r\n\r\n    const registerActiveItem = editId => { activeItem.current = editId; setTimestamp(Date.now()) } // TODO rename to generic item active\r\n    const unregisterActiveItem = () => registerActiveItem('')\r\n\r\n    const endClueEdit = (clueId, clueText) => {\r\n        game.getClue(clueId).clue = clueText;\r\n        activeItem.current = '';\r\n        setGame(initDesignBoard(game));\r\n    }\r\n\r\n    const preTileClick = () => activeItem.current = ''; // TODO consider changing this to a more user friendly experience\r\n\r\n    const handleClueClick = direction => clue => {\r\n        if(activeItem.current && activeItem.current.includes(EDIT_LINK)) {\r\n            if(activeItem.current.includes(clue.id)) {\r\n                return;\r\n            }\r\n\r\n            const selectedClue = game.getClue(game.getClueIdFromTile());\r\n            const indexOfClueAlreadyLinked = selectedClue.linkClues.findIndex(clueId => clueId === clue.id);\r\n            if(indexOfClueAlreadyLinked >= 0) {\r\n                pull(selectedClue.linkClues, clue.id);\r\n            } else {\r\n                selectedClue.linkClues.push(clue.id);\r\n            }\r\n            setTimestamp(Date.now());\r\n\r\n        } else {\r\n            if(game.getClueIdFromTile() === clue.id || game.getSecondaryClueIdFromTile() === clue.id) {\r\n                activateTile(game.selectedTile, direction);\r\n            } else {\r\n                activateTile(clue.tile, direction);\r\n            }\r\n        }\r\n    }\r\n\r\n    const demoEndGameMessage = () => {\r\n        setDemoGame(true);\r\n        activateEndGameMessage(game, setDemoGame, setTimestamp);\r\n    }\r\n\r\n    const ModifyGameBoardLengthStart = () => {\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <Tooltip title=\"Add Row & Column\">\r\n                    <AddCircleSharpIcon onClick={() => modifyBoardLength(ADD_TO_START)} style={{ color: \"green\", cursor: 'pointer' }} />\r\n                </Tooltip>\r\n                <Tooltip title=\"Delete Row & Column\">\r\n                    <RemoveCircleSharpIcon onClick={() => modifyBoardLength(DELETE_START)} style={{ color: \"red\", cursor: 'pointer' }} />\r\n                </Tooltip>\r\n                <Tooltip title=\"Rotational Symmetry\">\r\n                    <LoopIcon onClick={() => setRotationalSymmetry(!rotationalSymmetry)} style={{ margin: 'auto', cursor: 'pointer' }}\r\n                        className={`editIcon ${rotationalSymmetry ? 'editIconSelected' : ''}`}\r\n                    />\r\n                </Tooltip>\r\n                <div style={{ height: '48px' } }/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const ModifyGameBoardLengthEnd = () => {\r\n        return (\r\n            <div style={{ display: \"flex\", alignItems: \"flex-end\", marginBottom: '-50px' }}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <div onClick={() => modifyBoardLength(ADD_TO_END)}>\r\n                        <Tooltip title=\"Add Row & Column\">\r\n                            <AddCircleSharpIcon style={{ color: \"green\", cursor: 'pointer' }} />\r\n                        </Tooltip>\r\n                    </div>\r\n                    <div onClick={() => modifyBoardLength(DELETE_END)}>\r\n                        <Tooltip title=\"Delete Row & Column\">\r\n                            <RemoveCircleSharpIcon style={{ color: \"red\", cursor: 'pointer' }} />\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Backdrop open={howTo} style={{ zIndex: '2', backgroundColor: 'rgba(0, 0, 0, 0.8)' }} onClick={() => setHowTo(false)}>\r\n                <HowTo color=\"inherit\" />\r\n            </Backdrop>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={publishErrorMessage !== ''}\r\n                autoHideDuration={30 * 1000}\r\n                onClose={() => setPublishErrorMessage('')}>\r\n                    <Alert onClose={() => setPublishErrorMessage('')} severity=\"error\">\r\n                        {publishErrorMessage}\r\n                    </Alert>\r\n            </Snackbar>\r\n            <EditablePageHeader\r\n                title={game.title} classes={classesParent} saveGameWithTitle={saveGameWithTitle}\r\n                registerActiveItem={registerActiveItem}>\r\n                <Button\r\n                    style={{ backgroundColor: '#85dcb0', margin: '0 20px 0 20px' }}\r\n                    variant=\"contained\"\r\n                    onClick={() => setHowTo(true)}\r\n                    tabIndex=\"-1\"\r\n                >How to</Button>\r\n                <Button\r\n                    style={{ backgroundColor: '#85dcb0', margin: '0 20px 0 20px' }}\r\n                    variant=\"contained\"\r\n                    onClick={() => saveGame(game)}\r\n                    tabIndex=\"-1\"\r\n                >Save</Button>\r\n                <Button\r\n                    style={{ backgroundColor: '#85dcb0', margin: '0 20px 0 20px' }}\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                        const v = verifyPublish(game);\r\n                        if(v !== '') {\r\n                            setPublishErrorMessage(v);\r\n                            return;\r\n                        }\r\n                        saveGame(publish(game));\r\n                    }}\r\n                    tabIndex=\"-1\"\r\n                >Publish</Button>\r\n                <Button\r\n                    style={{ backgroundColor: '#41b3ac', margin: '0 0 0 20px', color: 'white' }}\r\n                    variant=\"contained\"\r\n                    onClick={() => loadFile(setGame)}\r\n                    tabIndex=\"1\"\r\n                >Load</Button>\r\n            </EditablePageHeader>\r\n            <Grid container direction=\"row\" justify=\"center\" spacing={0}>\r\n                <Grid container item direction=\"row\" justify=\"center\" spacing={0} xs={12} sm={6} style={{ margin: 'auto' }}>\r\n                    <ModifyGameBoardLengthStart />\r\n                    <div style={{ flexGrow: 1, maxWidth: `${game.gameBoardSize}px` }}>\r\n                        <EditableGameCompleteMessage\r\n                            message={game.gameFinishedMessage} classes={classesParent} saveGameWithFinishMessage={saveGameWithFinishMessage}\r\n                            registerActiveItem={registerActiveItem} demoEndGameMessage={demoEndGameMessage} />\r\n                        <Crossword game={game}\r\n                                   gameWon={demoGame}\r\n                                   rightClick={toggleTileBlock}\r\n                                   activateTile={activateTile}\r\n                                   preventCrosswordTyping={activeItem.current !== '' || demoGame}\r\n                                   preTileClick={preTileClick}\r\n                                   innerRef={elem => crosswordRef.current = elem}/>\r\n                    </div>\r\n                    <ModifyGameBoardLengthEnd />\r\n                </Grid>\r\n                <Grid container direction='row' item xs={12} sm={6}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <span style={{ fontSize: '1.5em', height: '40px', display: 'block' }}>{CLUE_COLUMN_TITLE[HORIZONTAL]}</span>\r\n                        <ol style={{ height: `${game.gameBoardSize}px`, overflowY: 'scroll', margin: '0 10px 0 0', listStyle: 'none', paddingLeft: '10px' }}>\r\n                            {game.clues[HORIZONTAL].map(clue => {\r\n                                return <EditableClue\r\n                                    key={clue.id}\r\n                                    clue={clue}\r\n                                    handleClueClick={handleClueClick(HORIZONTAL)}\r\n                                    selected={clue.id === game.getClueIdFromTile()}\r\n                                    secondary={clue.id === game.getSecondaryClueIdFromTile()}\r\n                                    innerRef={elem => clueRefs[clue.id] = elem}\r\n                                    registerActiveItem={registerActiveItem}\r\n                                    activeItem={activeItem.current}\r\n                                    endClueEdit={endClueEdit}\r\n                                    linked={game.getClue(game.getClueIdFromTile()).linkClues.find(clueId => clueId === clue.id)}\r\n                                    endClueLink={unregisterActiveItem}\r\n                                    activateTile={tile => activateTile(tile, HORIZONTAL)}\r\n                                />\r\n                            })}\r\n                        </ol>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <span style={{ fontSize: '1.5em', height: '40px', display: 'block' }}>{CLUE_COLUMN_TITLE[VERTICAL]}</span>\r\n                        <ol style={{ height: `${game.gameBoardSize}px`, overflowY: 'scroll', margin: '0 10px 0 0', listStyle: 'none', paddingLeft: '10px' }}>\r\n                            {game.clues[VERTICAL].map(clue => {\r\n                                return <EditableClue\r\n                                    key={clue.id}\r\n                                    clue={clue}\r\n                                    handleClueClick={handleClueClick(VERTICAL)}\r\n                                    selected={clue.id === game.getClueIdFromTile()}\r\n                                    secondary={clue.id === game.getSecondaryClueIdFromTile()}\r\n                                    innerRef={elem => clueRefs[clue.id] = elem}\r\n                                    registerActiveItem={registerActiveItem}\r\n                                    activeItem={activeItem.current}\r\n                                    endClueEdit={endClueEdit}\r\n                                    linked={game.getClue(game.getClueIdFromTile()).linkClues.find(clueId => clueId === clue.id)}\r\n                                    endClueLink={unregisterActiveItem}\r\n                                    activateTile={tile => activateTile(tile, VERTICAL)}\r\n                                />\r\n                            })}\r\n                        </ol>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Design;\r\n","import { block } from \"../Crossword/initBoard\";\r\nimport {HORIZONTAL} from \"../Crossword/constants\";\r\n\r\nexport const verifyPublish = game => {\r\n    let issue = '';\r\n    game.board.forEach((row, y) => row.forEach((cell, x) => {\r\n        if(!cell.blank && cell.guess === '') {\r\n            issue = `All tiles must have a letter`\r\n        }\r\n    }))\r\n    return issue;\r\n}\r\n\r\nexport const publish = ({ board, clues, gameFinishedMessage, title }) => ({\r\n    board: board.map(row => row.map(cell => cell.blank ? block() : { ...cell, answer: cell.guess, guess: '' })),\r\n    clues,\r\n    gameFinishedMessage,\r\n    title,\r\n    selectedTile: { x: 0, y: 0 },\r\n    direction: HORIZONTAL\r\n})\r\n","import React, {useRef, useState} from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const PageHeader = ({ title, children, classes }) => (\r\n    <Grid item xs={12} >\r\n        <Box my={4} className={classes.root}>\r\n            <Box className={classes.test1}>\r\n                <Grid container item justify=\"space-between\" spacing={0}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h4\" component=\"div\" >{title}</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {children}\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Box>\r\n        <Box my={4} className={classes.borderGradient}>\r\n        </Box>\r\n    </Grid>\r\n);\r\n\r\nexport default PageHeader;\r\n","import React from \"react\";\r\n\r\nimport './Clue.css'\r\n\r\nconst Clue = ({\r\n  clue,\r\n  handleClueClick,\r\n  selected,\r\n  secondary,\r\n  linked,\r\n  innerRef\r\n}) => {\r\n    return <li\r\n        style={{\r\n            ...(selected ? { backgroundColor: '#85dcb0' } :\r\n                linked ? { backgroundColor: '#e8a87c', opacity: '60%' } : {}),\r\n            cursor: 'pointer',\r\n            outline: 'none',\r\n            display: 'flex',\r\n            padding: '5px 10px 5px 1px'\r\n        }}\r\n        className={`${secondary ? 'secondaryClueBorder' : 'clueBorder'}`}\r\n        key={clue.id}\r\n        id={clue.id}\r\n        selected={selected}\r\n        onClick={() => handleClueClick(clue)}\r\n        ref={innerRef}\r\n        tabIndex='-1'>\r\n        <span style={{ fontWeight: 'bold',\r\n            textAlign: 'right',\r\n            minWidth: '12px',\r\n            width: '12px'\r\n        }}>{clue.clueNumber}</span>\r\n        <span style={{ marginLeft: '10px' }}>{clue.clue}</span>\r\n    </li>\r\n}\r\n\r\nexport default Clue;\r\n","import React, {useEffect, useState, useRef} from 'react';\r\nimport Crossword from \"../Crossword\";\r\nimport PageHeader from \"./PageHeader\";\r\nimport Clue from \"./Clue\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport {CLUE_COLUMN_TITLE, HORIZONTAL, VERTICAL} from \"../Crossword/constants\";\r\nimport {focusClues} from './utils'\r\nimport {saveGame} from \"../SaveGame\";\r\nimport loadFile from \"../LoadGame\";\r\nimport { activateEndGameMessage } from './endGame';\r\nimport {directionFromClueId} from \"../Crossword/utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: { flexGrow: 1 },\r\n    selectedClue: { backgroundColor: '#85dcb0' },\r\n    snackbar: { backgroundColor: '#41b3ac' },\r\n    block: { /*fill: #e27d60;*/ fill: '#e8a87c' },\r\n    tile: { fill: 'none', stroke: 'none', pointerEvents: 'visible' },\r\n    gameBoardBackground: { fill: '#fafafa', stroke: 'none' },\r\n    // gameWon .gameBoardBackground, .gameWon .selected {\r\n    gameWon: { fill: '#85dcb0', transition: 'fill 3s' },\r\n    finishMessagePixel: { fill: '#c38d9e' },\r\n    selected: { fill: '#c38d9e' },\r\n    highlighted: { fill: '#85dcb0' },\r\n    svg: { maxHeight: '600px '},\r\n    clueNumber: { fontSize: '0.8em' },\r\n    guess: { fontSize: '1.8em' },\r\n    grid: { stroke: '#e27d60' },\r\n    text: { cursor: 'default' }\r\n}));\r\n\r\nconst Play = ({ classesParent, setPlayGame }) => {\r\n    const [game, setGame] = useState(null);\r\n    const [gameWon, setGameWon] = useState(false);\r\n    const clueRefs = useRef([]).current;\r\n    const crosswordRef = useRef({ focus: () => {} });\r\n    const classes = useStyles();\r\n    const [timestamp, setTimestamp] = useState(Date.now());\r\n\r\n    useEffect(() => {\r\n        if(!game) {\r\n            loadFile(setGame).catch(() => setPlayGame(false))\r\n        }\r\n    }, []);\r\n\r\n    const activateTile = (tile, direction) => {\r\n        game.selectedTile = tile;\r\n        if(direction) {\r\n            game.direction = direction;\r\n        }\r\n        focusClues(game, clueRefs);\r\n        crosswordRef.current.focus();\r\n        setTimestamp(Date.now())\r\n    }\r\n\r\n    const handleClueClick = (clue, direction) => {\r\n        if(game.getClueIdFromTile() === clue.id || game.getSecondaryClueIdFromTile() === clue.id) {\r\n            activateTile(game.selectedTile, direction);\r\n        } else {\r\n            activateTile(clue.tile, direction);\r\n        }\r\n    }\r\n\r\n    const postKeyPress = () => {\r\n        let incorrectGuess = false;\r\n        for (let y = 0; y < game.board.length; y++) {\r\n            for(let x = 0; x < game.board.length; x++) {\r\n                const tile = game.getTileBoardItem({ x, y });\r\n                if(!tile.blank) {\r\n                    if(!tile.guess) {\r\n                        return;\r\n                    }\r\n                    if(tile.guess !== tile.answer) {\r\n                        incorrectGuess = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(!incorrectGuess) {\r\n            setGameWon(true);\r\n            activateEndGameMessage(game, setGameWon, setTimestamp);\r\n        }\r\n    }\r\n\r\n    return game ? (\r\n        <div className={classes.root}>\r\n            <PageHeader title={game.title} classes={classesParent}>\r\n                <Button\r\n                    style={{ backgroundColor: '#85dcb0', margin: '0 20px 0 20px' }}\r\n                    variant=\"contained\"\r\n                    onClick={() => saveGame(game)}\r\n                    tabIndex=\"-1\"\r\n                >Save</Button>\r\n                <Button\r\n                    style={{ backgroundColor: '#41b3ac', margin: '0 0 0 20px', color: 'white' }}\r\n                    variant=\"contained\"\r\n                    onClick={() => loadFile(setGame)}\r\n                    tabIndex=\"-1\"\r\n                >Load</Button>\r\n            </PageHeader>\r\n            <Grid container direction=\"row\" justify=\"center\" spacing={0}>\r\n                <Grid item xs={12} sm={6} style={{ display: 'contents', marginRight: '15px' }} className={gameWon ? 'gameWon' : ''} >\r\n                    <Crossword game={game}\r\n                               activateTile={activateTile}\r\n                               preventCrosswordTyping={gameWon}\r\n                               postKeyPress={postKeyPress}\r\n                               gameWon={gameWon}\r\n                               innerRef={elem => crosswordRef.current = elem}\r\n                    />\r\n                </Grid>\r\n                <Grid container direction='row' item xs={12} sm={6}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <span style={{ fontSize: '1.5em', height: '40px', display: 'block' }}>{CLUE_COLUMN_TITLE[HORIZONTAL]}</span>\r\n                        <ol style={{ height: `${game.gameBoardSize}px`, overflowY: 'scroll', margin: '0 10px 0 0', listStyle: 'none', paddingLeft: '10px' }}>\r\n                            {game.clues[HORIZONTAL].map(clue => {\r\n                                return <Clue\r\n                                    key={clue.id}\r\n                                    clue={clue}\r\n                                    handleClueClick={() => handleClueClick(clue, HORIZONTAL)}\r\n                                    selected={clue.id === game.getClueIdFromTile()}\r\n                                    secondary={clue.id === game.getSecondaryClueIdFromTile()}\r\n                                    linked={game.getClue(game.getClueIdFromTile()).linkClues.find(clueId => clueId === clue.id)}\r\n                                    innerRef={elem => clueRefs[clue.id] = elem}\r\n                                />\r\n                            })}\r\n                        </ol>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <span style={{ fontSize: '1.5em', height: '40px', display: 'block' }}>{CLUE_COLUMN_TITLE[VERTICAL]}</span>\r\n                        <ol style={{ height: `${game.gameBoardSize}px`, overflowY: 'scroll', margin: '0 10px 0 0', listStyle: 'none', paddingLeft: '10px' }}>\r\n                            {game.clues[VERTICAL].map(clue => {\r\n                                return <Clue\r\n                                    key={clue.id}\r\n                                    clue={clue}\r\n                                    handleClueClick={() => handleClueClick(clue, VERTICAL)}\r\n                                    selected={clue.id === game.getClueIdFromTile()}\r\n                                    secondary={clue.id === game.getSecondaryClueIdFromTile()}\r\n                                    linked={game.getClue(game.getClueIdFromTile()).linkClues.find(clueId => clueId === clue.id)}\r\n                                    innerRef={elem => clueRefs[clue.id] = elem}\r\n                                />\r\n                            })}\r\n                        </ol>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    ) : <div />\r\n}\r\n\r\nexport default Play;\r\n","import './App.css';\r\nimport React, {useState} from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Landing from './Landing';\r\nimport Design from \"./Design\";\r\nimport Play from \"./Play\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'linear-gradient(155deg, #41b3ac 10%, #e8a87c 85%)',\r\n        color: 'white',\r\n        padding: '10px 40px',\r\n        margin: 0,\r\n        alignContent: \"center\"\r\n    },\r\n    borderGradient: {\r\n        background: 'linear-gradient(45deg, #e8a87c 30%, #e8a87c 90%)',\r\n        margin: 0,\r\n        marginBottom: 10,\r\n        padding: \"5px\"\r\n    }\r\n});\r\n\r\nexport const PageHeader = ({ title, children, classes }) => (\r\n    <Grid item xs={12} >\r\n        <Box my={4} className={classes.root}>\r\n            <Box className={classes.test1}>\r\n                <Grid container item justify=\"space-between\" spacing={0}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h4\" component=\"div\" >{title}</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {children}\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Box>\r\n        <Box my={4} className={classes.borderGradient}>\r\n        </Box>\r\n    </Grid>\r\n)\r\n\r\nfunction App() {\r\n    const [designGame, setDesignGame] = useState(false);\r\n    const [playGame, setPlayGame] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"App\" >\r\n            <Grid container spacing={0} style={{ minHeight: '100vh', marginBottom: '-20px' }} >\r\n                <Grid item xs={12} >\r\n                    {playGame ?\r\n                        <Play classesParent={classes} setPlayGame={setPlayGame} /> :\r\n                     designGame ?\r\n                        <Design classesParent={classes} /> :\r\n                        <Landing classesParent={classes} title=\"Play and Design Crosswords\"\r\n                                 setPlayGame={setPlayGame}\r\n                                 setDesignGame={setDesignGame} />\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"@fontsource/roboto\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}